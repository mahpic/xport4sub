//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.15 at 12:25:29 PM EST 
//


package edu.uga.mahpic.submission.spec;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;


/**
 * <p>Java class for SHEET_STYLEType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="SHEET_STYLEType">
 *   &lt;simpleContent>
 *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *       &lt;attribute name="resizeColsToFit" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="maxColWidth" type="{http://www.w3.org/2001/XMLSchema}int" />
 *       &lt;attribute name="wrapText" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *     &lt;/extension>
 *   &lt;/simpleContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.NONE)
public class SheetStyle {

    private static SheetStyle defaultStyle;

    private Boolean resizeColsToFit;

    private Integer maxColWidth;

    private Boolean wrapText;

    private Integer freezeRows = 0;

    private Integer freezeColumns = 0;

    private boolean autoResizeRows = true;

    /**
     * Gets the value of the resizeColsToFit property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isResizeColsToFit() {
        if (this.resizeColsToFit == null) {
            this.resizeColsToFit = false;
        }
        return resizeColsToFit;
    }

    /**
     * Sets the value of the resizeColsToFit property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */

    @XmlAttribute(name = "resizeColsToFit")
    public void setResizeColsToFit(Boolean value) {
        if (value == null) {
            value = false;
        }
        this.resizeColsToFit = value;
    }

    /**
     * Gets the value of the maxColWidth property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getMaxColWidth() {
        return maxColWidth;
    }

    /**
     * Sets the value of the maxColWidth property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    @XmlAttribute(name = "maxColWidth")
    public void setMaxColWidth(Integer value)
    {
        if (value == null) {
            value = 60*256;
        }
        this.maxColWidth = value * 256;
    }

    /**
     * Gets the value of the wrapText property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isWrapText() {
        if (wrapText == null) {
            wrapText = true;
        }
        return wrapText;
    }

    /**
     * Sets the value of the wrapText property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    @XmlAttribute(name = "wrapText")
    public void setWrapText(Boolean value) {
        this.wrapText = value;
    }

    public Integer getFreezeRows() {
        return freezeRows;
    }

    @XmlAttribute(name = "freezeRows")
    public void setFreezeRows(Integer freezeRows) {
        if (freezeRows != null && freezeRows >0 && freezeRows <=3){
            this.freezeRows = freezeRows;
        }else{
            this.freezeRows = 0;
        }
    }

    public Integer getFreezeColumns() {
        return freezeColumns;
    }

    @XmlAttribute(name = "freezeColumns")
    public void setFreezeColumns(Integer freezeColumns) {
        if (freezeColumns != null && freezeColumns >0 && freezeColumns <=3){
            this.freezeColumns = freezeColumns;
        }else{
            this.freezeColumns = 0;
        }
    }

    public static SheetStyle getDefaultStyle(){
        if (defaultStyle == null) {
            defaultStyle = new SheetStyle();
            defaultStyle.setMaxColWidth(60);
            defaultStyle.setResizeColsToFit(false);
            defaultStyle.setWrapText(true);
        }
        return defaultStyle;
    }

    public boolean hasFreezePane(){
        return freezeColumns != 0 || freezeRows != 0;
    }

    public boolean autoResizeRows() {
        return autoResizeRows;
    }

    @XmlAttribute(name = "autoResizeRows")
    public void setAutoResizeRows(boolean autoResizeRows) {
        this.autoResizeRows = autoResizeRows;
    }

    public SheetStyle(){

    }

    /**
     * Copy Constructor
     * @param source
     */
    private SheetStyle(SheetStyle source){
        if (source.resizeColsToFit != null) {
            this.resizeColsToFit = source.resizeColsToFit;
        }
        if (source.maxColWidth != null) {
            this.maxColWidth = source.maxColWidth;
        }
        if (source.wrapText != null) {
            this.wrapText = source.wrapText;
        }
        if (source.freezeColumns != null) {
            this.freezeColumns = source.freezeColumns;
        }
        if (source.freezeRows != null) {
            this.freezeRows = source.freezeRows;
        }
        this.autoResizeRows = source.autoResizeRows;
    }

    public SheetStyle cloneSheetStyle(){
        return new SheetStyle(this);
    }
}
